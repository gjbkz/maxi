{
    "private": true,
    "license": "Apache-2.0",
    "scripts": {
        "prepare": "lerna bootstrap",
        "dev": "lerna run dev --parallel",
        "build": "lerna run build",
        "test:lerna": "lerna run test --parallel",
        "test:repo": "ts-node modules-node/cli-tools/src/validate-packages.ts",
        "test": "run-p test:*",
        "lint": "eslint 'modules-*/*/src/**/*.ts'",
        "bump": "lerna version --conventional-commits --sign-git-commit --sign-git-tag --no-push"
    },
    "devDependencies": {
        "@commitlint/cli": "^8.3.5",
        "@commitlint/config-conventional": "^8.3.4",
        "@types/aws-lambda": "^8.10.40",
        "@types/eslint": "^6.1.7",
        "@types/js-yaml": "^3.12.2",
        "@types/node": "^12.12.26",
        "@types/react": "^16.9.19",
        "@types/react-dom": "^16.9.5",
        "@types/rimraf": "^2.0.3",
        "@types/semver": "^7.1.0",
        "@typescript-eslint/eslint-plugin": "^2.18.0",
        "@typescript-eslint/parser": "^2.18.0",
        "autoprefixer": "^9.7.4",
        "ava": "2.4.0",
        "eslint": "^6.8.0",
        "globby": "^11.0.0",
        "husky": "^4.2.1",
        "lerna": "^3.20.2",
        "lint-staged": "^10.0.7",
        "npm-run-all": "4.1.5",
        "parcel-bundler": "^1.12.4",
        "postcss-modules": "^1.5.0",
        "react": "^16.12.0",
        "react-dom": "^16.12.0",
        "rimraf": "^3.0.1",
        "ts-node": "^8.6.2",
        "typescript": "^3.7.5"
    },
    "eslintConfig": {
        "extends": [
            "eslint:recommended",
            "plugin:@typescript-eslint/recommended"
        ],
        "env": {
            "es6": true
        },
        "rules": {
            "no-constant-condition": [
                "error",
                {
                    "checkLoops": false
                }
            ]
        },
        "overrides": [
            {
                "files": [
                    "*.ts"
                ],
                "parser": "@typescript-eslint/parser",
                "plugins": [
                    "@typescript-eslint"
                ],
                "rules": {
                    "indent": "off",
                    "@typescript-eslint/array-type": [
                        "error",
                        "generic"
                    ],
                    "@typescript-eslint/explicit-function-return-type": "off",
                    "@typescript-eslint/indent": [
                        "error",
                        4,
                        {
                            "SwitchCase": 0,
                            "MemberExpression": 0,
                            "ignoredNodes": [
                                "ConditionalExpression"
                            ]
                        }
                    ],
                    "@typescript-eslint/interface-name-prefix": [
                        "error",
                        "always"
                    ],
                    "@typescript-eslint/member-delimiter-style": [
                        "error",
                        {
                            "multiline": {
                                "delimiter": "comma",
                                "requireLast": true
                            },
                            "singleline": {
                                "delimiter": "comma",
                                "requireLast": false
                            }
                        }
                    ],
                    "@typescript-eslint/no-use-before-define": [
                        "error",
                        {
                            "variables": false
                        }
                    ]
                }
            },
            {
                "files": [
                    "modules-dom/**/*.ts"
                ],
                "env": {
                    "browser": true
                },
                "globals": {
                    "document": true
                }
            },
            {
                "files": [
                    "modules-*/*/scripts/**/*.ts",
                    "modules-node/**/*.ts"
                ],
                "env": {
                    "node": true
                }
            },
            {
                "files": [
                    "modules-node/cli-tools/src/run.ts",
                    "modules-node/stream-tools/src/types.ts",
                    "modules-dom/data-viewer/src/script/types.ts",
                    "modules-dom/data-viewer/src/script/util/isAvailablePlotType.ts",
                    "modules-dom/data-viewer/src/script/util/isAvailableFont.ts",
                    "modules-dom/data-viewer/src/script/util/useCache.ts"
                ],
                "rules": {
                    "@typescript-eslint/no-explicit-any": "off"
                }
            }
        ]
    },
    "ava": {
        "compileEnhancements": false,
        "extensions": [
            "ts"
        ],
        "require": [
            "ts-node/register"
        ]
    },
    "commitlint": {
        "extends": [
            "@commitlint/config-conventional"
        ],
        "rules": {
            "scope-enum": [
                2,
                "always",
                [
                    "data-viewer",
                    "catalog",
                    "date-tools",
                    "number-tools",
                    "object-tools",
                    "string-tools",
                    "cli-tools",
                    "config-validator",
                    "fs-tools",
                    "net-tools",
                    "server",
                    "stream-tools",
                    "deps",
                    "repo"
                ]
            ]
        }
    },
    "husky": {
        "hooks": {
            "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
        }
    },
    "renovate": {
        "extends": [
            ":ignoreModulesAndTests",
            ":unpublishSafe",
            ":semanticPrefixChore",
            ":prNotPending",
            ":prConcurrentLimit10",
            ":prHourlyLimitNone",
            ":label(dependencies)",
            ":automergeMinor"
        ]
    }
}
